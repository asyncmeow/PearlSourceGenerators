using System.Linq;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;
using Xunit;

namespace PearlSourceGenerators.Tests;
public class LazyDependencyInjectionTests
{
    private const string InputClassText = """

                                          namespace TestNamespace;

                                          class LazyService {}

                                          [Generators.LazyDependencyInjection]
                                          partial class LazyTest {
                                              [Generators.LazyDependency]
                                              private LazyService? _lazyService;
                                          }
                                          """;
    
    private const string ExpectedGeneratedClassText = """
                                                      // <auto-generated/>
                                                      using System;
                                                      using Microsoft.Extensions.DependencyInjection;
                                                      namespace TestNamespace;
                                                      partial class LazyTest
                                                      {
                                                          private IServiceProvider _provider;
                                                          public LazyTest(IServiceProvider provider) {
                                                              _provider = provider;
                                                          }
                                                          public TestNamespace.LazyService LazyService => _lazyService ??= _provider.GetRequiredService<TestNamespace.LazyService>();
                                                      }
                                                      """;

    [Fact]
    public void TestLazyDependencyInjection()
    {
        var generator = new LazyDependencyInjectionSourceGenerator();
        var driver = CSharpGeneratorDriver.Create(generator);
        var compilation = CSharpCompilation.Create(nameof(LazyDependencyInjectionTests),
            new[] { CSharpSyntaxTree.ParseText(InputClassText) },
            new[]
            {
                MetadataReference.CreateFromFile(typeof(object).Assembly.Location)
            });

        var runResult = driver.RunGenerators(compilation).GetRunResult();
        var generatedFileSyntax = runResult.GeneratedTrees.Single(t => t.FilePath.EndsWith("LazyTest.g.cs"));
        Assert.Equal(ExpectedGeneratedClassText, generatedFileSyntax.GetText().ToString(), 
            ignoreLineEndingDifferences: true);
    }
}